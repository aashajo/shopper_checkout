<!DOCTYPE html>
<html>

<head>
    <title>My Shop</title>
    <link rel="stylesheet" href="https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.11.4/adyen.css"
        integrity="sha384-gTrHdtmLDTaHuDUKM1okZAVgBTwjiI+E66Tz3K71+10Lhd7zxvtUF5lrHc35cNIR" crossorigin="anonymous">

    <link rel="stylesheet" type="text/css" href="css/styles.css" />
    <link rel="stylesheet" type="text/css"
        href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
</head>

<body>
    <header class="main-header">
        <center>
            <h1 class="band-name band-name-large" style="font-family: Arial, Helvetica, sans-serif"><i>My Shop</i></h1>
        </center>
    </header>
    <hr />
    <section class="container content-section">
            <div class="" style="margin-top: 30px;  margin-left: 10px; text-align: center;">
                <h2><b>Total Amount: $<%= totalAmount/100 %> </b></h2>
            </div>
        <div class="row">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                <div id="dropin-container" style="width: 100%; margin-top: 5%;"></div>
            </div>
        </div>
    </section>
</body>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script src="https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.11.4/adyen.js"
    integrity="sha384-r6VzatKWD1SDwT5pfnl6sfkNJYAsTAUlUOO6PEbIhMwWFkPrE28R/8cjAKBp9yCd"
    crossorigin="anonymous"></script>


<script>
    var paymentDetails = JSON.parse('<%-JSON.stringify(paymentDetails)%>');
    console.log(paymentDetails)
    var paymentMethods = JSON.parse('<%-JSON.stringify(paymentMethods)%>');
    var totalAmount = <%=totalAmount%>
        console.log(paymentMethods)
    const configuration = {
        paymentMethodsResponse: paymentMethods, // The `/paymentMethods` response from the server.
        clientKey: "test_6Z7E522TI5B6PM6O26D7XOMR54I2HIY3", // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.
        locale: "en-US",
        environment: "test",
        onSubmit: (state, dropin) => {
            // Your function calling your server to make the `/payments` request
            $.post('/payments', { paymentMethod: state, totalAmount: totalAmount }, function (response) {
                console.log(response)
                if (response.action) {
                    // Drop-in handles the action object from the /payments response
                    dropin.handleAction(response.action);
                } else {
                    // Your function to show the final result to the shopper'
                    console.log(response)
                    handleResponse(response)
                    //showFinalResult(response);
                }
            });
        },
        onAdditionalDetails: (state, dropin) => {
            // Your function calling your server to make a `/payments/details` request
            makeDetailsCall(state.data)
                .then(response => {
                    if (response.action) {
                        // Drop-in handles the action object from the /payments response
                        dropin.handleAction(response.action);
                    } else {
                        // Your function to show the final result to the shopper
                        showFinalResult(response);
                    }
                })
                .catch(error => {
                    throw Error(error);
                });
        },
        paymentMethodsConfiguration: {
            card: { // Example optional configuration for Cards
                name: true,
                showBrandIcon: true,
                hasHolderName: true,
                holderNameRequired: true,
                enableStoreDetails: false,
                hideCVC: false, // Change this to true to hide the CVC field for stored cards
                name: 'Credit or debit card'
            }
        }
    };

    const checkout = new AdyenCheckout(configuration);
    const dropin = checkout.create('dropin').mount('#dropin-container');

    function handleResponse(res) {
        if (res.resultCode.toLowerCase() == 'authorised') {
            // Show a success message
            dropin.setStatus('success');
            dropin.setStatus('success', { message: 'Payment successful!' });
            swal("Order placed and payment is done successfully !", { icon: "success" })
        } else if (res.resultCode.toLowerCase() == 'cancelled') {
            dropin.setStatus('cancelled');
            dropin.setStatus('cancelled', { message: 'Something went wrong.' });
            swal("Payment has been cancelled by the User !", { icon: "error" })
        } else if (res.resultCode.toLowerCase() == 'pending') {
            dropin.setStatus('pending');
            dropin.setStatus('pending', { message: 'Order placed but waiting for the payment to be completed.' });
            swal("Order placed but waiting for the payment to be completed.", { icon: "info" })
        } else if (res.resultCode.toLowerCase() == 'refused') {
            dropin.setStatus('refused');
            dropin.setStatus('refused', { message: 'Payment refused, please try again with different card.' });
            swal("Payment refused, please try again with different card.", res.refusalReason, { icon: "error" })
        } else if (res.resultCode.toLowerCase() == 'received') {
            dropin.setStatus('received');
            dropin.setStatus('received', { message: 'Order placed but waiting for the payment to clear.' });
            swal("Order placed but waiting for the payment to clear.", { icon: "info" })
        } else {
            dropin.setStatus('error');
            dropin.setStatus('error', { message: 'Something went wrong.' });
            swal("Somthing went wrong !", { icon: "error" })
        }


        // else {

        //     // Show an error message
        //     dropin.setStatus('error');
        //     dropin.setStatus('error', { message: 'Something went wrong.' });
        // }
    }

    $(document).ready(function () {
        if (paymentDetails) {
            console.log(paymentDetails.resultCode)
            handleResponse(paymentDetails)
        } else {
            let searchParams = new URLSearchParams(window.location.search)
            console.log(searchParams)
            var res = {}
            if (searchParams.has('resultCode')) {
                console.log(searchParams.get('resultCode'))
                res.resultCode = searchParams.get('resultCode')
            }
            if (searchParams.has('refusalReason')) {
                console.log(searchParams.get('refusalReason'))
                res.refusalReason = searchParams.get('refusalReason')
            }
            handleResponse(res)
        }
    });

</script>


</html>